import React, { useState, useEffect, useRef } from "react";
import { FaCss3Alt, FaReact, FaJava } from "react-icons/fa";
import { IoLogoJavascript } from "react-icons/io5";
import { SiJavascript, SiTypescript } from "react-icons/si";
import { FaFigma } from "react-icons/fa";
import { PiFileSqlDuotone } from "react-icons/pi";

const Projects = () => {
  const defaultProject = "project1";

  const [selectedProject, setSelectedProject] = useState<string | null>(
    () => localStorage.getItem("selectedProject") || defaultProject
  );

  const [animationTriggered, setAnimationTriggered] = useState(false);
  const sectionRef = useRef<HTMLDivElement>(null); // Reference to track the section

  interface Project {
    title: string;
    languages: string;
    caption: string;
    icons: React.ElementType[];
    description: string;
    images: string[];
    color: string;
  }

  const projects: Record<string, Project> = {
    project1: {
      title: "D&D Utility App",
      languages:
        "In this project, I plan to use React, TailwindCSS, and TypeScript for the final version. I used JavaScript for the first version.",
      caption:
        "An all-purpose D&D app, including generators and various other functions that are less common. A tool for DMs and players alike!",
      description:
        "After creating the Fantasy Potion Generator in Java, I wanted to branch out and create something with an interface, my first solution was JavaScript, which I got a working prototype of, but, to fully scale this up I plan to use React, TailwindCSS and TypeScript. This will help me develop the interface and with Firebase, I'll create a database of information, as opposed to CSV files, that can be accessed. This is my current and ongoing project, and images shown are design concepts.",
      images: [
        "images/screenshots/project1/wireframe.png",
        "images/screenshots/project1/start.png",
        "images/screenshots/project1/login.png",
        "images/screenshots/project1/signup.png",
        "images/screenshots/project1/home.png",
        "images/screenshots/project1/potiongenerator.png",
        "images/screenshots/project1/recentpotions.png",
        "images/screenshots/project1/survivalgenerator.png",
        "images/screenshots/project1/recentencounters.png",
        "images/screenshots/project1/settings.png",
      ],
      color: "#879586",
      icons: [FaReact, FaCss3Alt, SiTypescript, IoLogoJavascript],
    },
    project2: {
      title: "Portfolio Website",
      languages:
        "In this project, I used React, TailwindCSS for consistent design, and TypeScript. This was one of my first times using these languages/framework, regardless it was extremely seamless and enjoyable to use. For icons I used react-icons, as well as some packages to assist with more technical parts.",
      caption:
        "This website, built with React and TypeScript, was made to showcase my projects and skills in an engaging fashion.",
      description:
        "This project was created to show off my skills in a unique way, I'd always loved the ideas of portfolio websites, especially being someone interested in web development, so I thought I might as well give it a try in a new framework. I used SVGs for the sections that bridge the divide between content sections, generated by Haikei. I added interactive parts to push my skills and try new things, which are - fingers crossed - all perfectly functional.",
      images: [
        "images/screenshots/project2/home.png",
        "images/screenshots/project2/about.png",
        "images/screenshots/project2/skills.png",
        "images/screenshots/project2/edu1.png",
        "images/screenshots/project2/edu2.png",
        "images/screenshots/project2/exp1.png",
        "images/screenshots/project2/exp2.png",
        "images/screenshots/project2/projects.png",
      ],
      color: "#879586",
      icons: [FaReact, FaCss3Alt, SiTypescript, IoLogoJavascript],
    },
    project3: {
      title: "Hackathon - Translation",
      languages:
        "In this project, I used Figma, CSS, and JavaScript for fine-tuning design aspects. I also worked in a group, so teamwork, creativity, and time management were essential. My approach with the UI/UX design was to create a simple, yet modern looking app for anyone to use.",
      caption:
        "A project intended to bridge the gap between different cultures, this app concept was developed for that purpose.",
      description:
        "In this project, with the intention of bridging the gap both in regards to language and culture. Our approach met both. The concept was a buddy/volunteer system. For instance, if you were travelling to a foreign country, the app would help assign you a buddy that you can chat with, through this experiences, perspectives and culture can be shared. There would be additional features, like preferences, AI Chatbot, for any extra assistance. As well as articles written about various countries, by the volunteers to best create accurate & helpful information. My team and I would be interested in pursuing development on this app concept.",
      images: [
        "images/screenshots/project3/wireframe.png",
        "images/screenshots/project3/signup.png",
        "images/screenshots/project3/home.png",
        "images/screenshots/project3/aichat.png",
        "images/screenshots/project3/findbuddy.png",
        "images/screenshots/project3/info.png",
        "images/screenshots/project3/settings.png",
      ],
      color: "#879586",
      icons: [FaFigma, FaCss3Alt, SiTypescript],
    },
    project4: {
      title: "MJs Cafe",
      languages:
        "This project had two stages, the design process in Figma, then the development process using HTML, CSS and some basic JS. This was early in my development journey.",
      caption: "A simple static cafe website.",
      description:
        "MJ's Cafe, located in the heart of Niton on the Isle of Wight, is a cozy spot known for its locally sourced coffee and welcoming atmosphere. I developed a website for the cafe using HTML, CSS and JS, focusing on a clean, responsive design that reflects the cafe’s charm. The site features a full digital menu, showcasing their offerings from breakfast to specialty coffees, and highlights their partnership with a local coffee roaster.",
      images: [
        "images/screenshots/project4/home.png",
        "images/screenshots/project4/section1.png",
        "images/screenshots/project4/section1mobile.png",
        "images/screenshots/project4/section2.png",
        "images/screenshots/project4/section2mobile.png",
        "images/screenshots/project4/section3.png",
        "images/screenshots/project4/section3mobile.png",
        "images/screenshots/project4/menu.png",
        "images/screenshots/project4/menumobile.png",
      ],
      color: "#879586",
      icons: [FaReact, FaCss3Alt, SiTypescript, IoLogoJavascript],
    },
    project5: {
      title: "CiB",
      languages:
        "We developed a database to handle SQL queries, to create and export business reports. I developed the UI, handling the requirements and therefore the features needed for each type of user and what content should be displayed on each page. The design was created in Figma, with some CSS and JS to refine design aspects more specifically.",
      caption:
        "Project in association with Bournemouth Uni and JP Morgan, about creating an Incident Response System.",
      description:
        "As part of the Computing in Business (CiB) project between Bournemouth University and JP Morgan, our team focused on developing an 'Incident Response System'. The project required us to collaborate closely with JP Morgan’s tech experts, conducting professional interviews to gather detailed requirements and ensure we understood the critical needs of the system. By approaching the project with a strong emphasis on professionalism and attention to detail, we mapped out key functionalities for the UI and System depending on which level of authentication is currently used. This involved not only technical development but also regular communication with stakeholders to refine features, ensuring the solution aligned with industry standards and could adapt to the fast-paced demands of financial services. Through this, we gained valuable experience in managing client expectations, developing solutions under tight deadlines, and contributing to a high-impact business environment.",
      images: [
        "images/screenshots/project5/image (2).jpg",
        "images/screenshots/project5/image (3).jpg",
        "images/screenshots/project5/image (4).jpg",
        "images/screenshots/project5/image (5).jpg",
        "images/screenshots/project5/image (6).jpg",
        "images/screenshots/project5/image (7).jpg",
        "images/screenshots/project5/image (8).jpg",
        "images/screenshots/project5/image (9).jpg",
        "images/screenshots/project5/image (10).jpg",
        "images/screenshots/project5/image (11).jpg",
        "images/screenshots/project5/image (12).jpg",
        "images/screenshots/project5/image (13).jpg",
        "images/screenshots/project5/image (14).jpg",
        "images/screenshots/project5/image (15).jpg",
        "images/screenshots/project5/image (16).jpg",
        "images/screenshots/project5/image (17).jpg",
        "images/screenshots/project5/image (18).jpg",
        "images/screenshots/project5/image (19).jpg",
        "images/screenshots/project5/image (20).jpg",
        "images/screenshots/project5/image (21).jpg",
        "images/screenshots/project5/image (22).jpg",
      ],
      color: "#879586",
      icons: [FaFigma, FaCss3Alt, SiJavascript, PiFileSqlDuotone],
    },
    project6: {
      title: "Potion Generator",
      languages:
        "In this project I used Java, I learnt this throughout my first year of uni. I used IntelliJ through JetBrains Toolbox. Additionally I used a Scanner class to acheive Reading & Writing into and out of files.",
      caption: "A fantasy potion generator for D&D",
      icons: [FaJava],
      description:
        "After my Programming unit in first year of university, I wanted to build something that would be useful. I decided upon a generator that wasn't typically found, using CSV files, I read the information from the files, parsed it then gave the user an option to write it onto an notepad file, or print it into the terminal. This helped me compile all my skills learnt and apply it to a concept I was enthusiastic about. No images to be shown, no available UI. ",
      images: [],
      color: "#879586",
    },
    project7: {
      title: "Pinterest Web Clone",
      languages: "React, TypeScript, HTML, TailwindCSS, CSS",
      caption:
        "A clone / redesign of a popular pinboard app called Pinterest. ",
      icons: [FaReact, FaCss3Alt, SiTypescript, IoLogoJavascript],
      description:
        "To refine my design and front-end skills, I developed a clone version of pinterest, currently lacking functionality but has all the same design features of Pinterest. ",
      images: [
        "images/screenshots/project7/homepage.png",
        "images/screenshots/project7/search.png",
        "images/screenshots/project7/hover.png",
      ],
      color: "#879586",
    },
  };
  const handleProjectClick = (project: string) => {
    if (selectedProject !== project) {
      setSelectedProject(project);
      localStorage.setItem("selectedProject", project);
      setAnimationTriggered(false); // Reset animation trigger
    }
  };

  // Intersection Observer to trigger animation when section is visible
  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        if (entries[0].isIntersecting) {
          setAnimationTriggered(true); // Trigger the animation when in view
        }
      },
      { threshold: 0 } // Adjusted the threshold to 0 for quicker detection
    );

    if (sectionRef.current) {
      observer.observe(sectionRef.current);
    }

    // Check if the section is already in the viewport on load (for mobile)
    if (sectionRef.current) {
      const rect = sectionRef.current.getBoundingClientRect();
      if (rect.top < window.innerHeight && rect.bottom >= 0) {
        setAnimationTriggered(true);
      }
    }

    return () => {
      if (sectionRef.current) {
        observer.unobserve(sectionRef.current);
      }
    };
  }, [selectedProject]);

  return (
    <div
      id="projects"
      className="projects-wrapper section-styling bg-[#3E4A3D] h-auto"
    >
      <div className="custom-heading-v2 header text-white mb-8">
        <h3>Projects</h3>
      </div>
      <div className="project-container ml-8 mr-8">
        <div className="project-list-wrapper flex flex-row flex-wrap justify-center gap-4">
          {Object.keys(projects).map((project) => (
            <div
              key={project}
              className={`project-list-item text-white p-4 bg-gray-200 text-lg cursor-pointer font-semibold w-[16rem] text-center rounded-md ${
                selectedProject === project ? "active" : ""
              }`}
              onClick={() => handleProjectClick(project)}
              style={{
                backgroundColor:
                  selectedProject === project ? projects[project].color : "",
                color:
                  selectedProject === project
                    ? "white"
                    : projects[project].color,
              }}
            >
              <h3>{projects[project].title}</h3>
            </div>
          ))}
        </div>

        <div
          ref={sectionRef} // Attach the ref to monitor visibility
          className="current-project-display ml-8 mr-8 mt-12 text-white"
        >
          <h3 className=" text-4xl sm:text-4xl md:text-5xl lg:text-5xl xl:text-6xl text-left font-bold p-4 ">
            {selectedProject
              ? projects[selectedProject].title
              : "Select a Project!"}
          </h3>
          <div className="caption p-2 ml-2 text-sm">
            {selectedProject ? projects[selectedProject].caption : ""}
          </div>

          <div className="upper mt-8 mb-8 ">
            <div
              className={`desc-container p-6 text-left bg-[#697D67] rounded slide-in-left ${
                animationTriggered ? "visible" : ""
              }`}
            >
              <h3 className="font-semibold text-2xl">About</h3>
              {selectedProject ? projects[selectedProject].description : ""}
            </div>
          </div>

          <div className="lower flex flex-row flex-wrap justify-center mt-8">
            {/* Language Container with Slide-in from Left */}
            {selectedProject && (
              <div
                className={`language-container p-4 w-4/5 slide-in-left mb-4 ${
                  animationTriggered ? "visible" : ""
                }`}
              >
                <h3 className="font-semibold text-2xl ">
                  {selectedProject ? "Skills Involved" : ""}
                </h3>
                <p className="language-content text-md mt-2">
                  {selectedProject ? projects[selectedProject].languages : ""}
                </p>
              </div>
            )}
            {/* Icons Container with Slide-in from Right */}
            {selectedProject && (
              <div
                className={`icons-container p-4 slide-in-right ${
                  animationTriggered ? "visible" : ""
                }`}
              >
                <div className="icons grid grid-cols-2 gap-2 justify-items-center">
                  {selectedProject &&
                    projects[selectedProject].icons.map((Icon, index) => (
                      <div key={index} className="icon-item">
                        <Icon className="text-7xl" />
                      </div>
                    ))}
                </div>
              </div>
            )}
            {selectedProject && (
              <div
                className={`img-wrapper w-full mb-8 slide-in-right ${
                  animationTriggered ? "visible" : ""
                }`}
              >
                <div className="imgs-container flex flex-col">
                  <h3 className="font-semibold text-2xl mb-1">Images</h3>
                  <caption className="text-left mb-4 text-sm">
                    Pictures vary from early concepts, wireframes to final
                    design, including different screen sizes.
                  </caption>
                  <div className="img-grid columns-2 sm:columns-3 md:columns-3 lg:columns-4 xl:columns-4 gap-x-4">
                    {selectedProject &&
                      projects[selectedProject].images.map(
                        (imageUrl, index) => (
                          <div
                            key={index}
                            className="img-box mb-2 break-inside-avoid"
                          >
                            <a
                              href={imageUrl}
                              target="_blank"
                              rel="noopener noreferrer"
                            >
                              <img
                                src={imageUrl}
                                alt={`${
                                  projects[selectedProject].title
                                } Screenshot ${index + 1}`}
                                className="max-w-full h-auto rounded-md shadow-lg"
                              />
                            </a>
                          </div>
                        )
                      )}
                  </div>
                </div>
              </div>
            )}{" "}
          </div>
        </div>
      </div>
      <div className="projects-svg-container">
        <div className="projects-svg-background"></div>
      </div>
    </div>
  );
};

export default Projects;
